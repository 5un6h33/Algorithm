#include <iostream>

using namespace std;

char input[10000][11];

struct Trie
{
    bool finish;
    Trie *Node[10];
    Trie()
    {
        finish = false;
        for (int i = 0; i < 10; i++)
            Node[i] = NULL;
    }
    ~Trie()
    {
        for (int i = 0; i < 10; i++)
            if (Node[i])
                delete Node[i];
    }
    void insert(char *str)
    {
        if (*str == '\0')
        {
            finish = true;
            return;
        }
        int cur = *str - '0';
        if (Node[cur] == NULL)
            Node[cur] = new Trie();
        Node[cur]->insert(str + 1);
    }
    bool find(char *str)
    {
        if (*str == '\0')
            return false;
        if (finish == true)
            return true;
        int cur = *str - '0';
        if (Node[cur] == NULL)
            return false;
        return Node[cur]->find(str + 1);
    }
};

int main(void)
{
    // ios::sync_with_stdio(false);
    // cin::tie(0);
    // cout::tie(0);
    int t, n;
    cin >> t;
    while (t--)
    {
        cin >> n;
        Trie *root = new Trie();
        for (int i = 0; i < n; i++)
        {
            cin >> input[i];
            root->insert(input[i]);
        }
        int i;
        for (i = 0; i < n; i++)
        {
            if (root->find(input[i]))
            {
                cout << "NO\n";
                break;
            }
        }
        if (i == n)
            cout << "YES\n";
    }
}
